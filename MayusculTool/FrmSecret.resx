<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tmrSecret.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAGACoDAAAFgAAACgAAAAgAAAAQAAAAAEAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAbErEAAABqZ8s7M7wuJLcxJ7gxJ7gxJ7gxJ7gxJ7gxJ7gxJ7gxJ7gxJ7gxJ7gxJ7gxJ7gxJ7gxJ7gx
        J7gxJ7gxJ7gxJ7gxJ7gxJ7gxJ7gxKLguJbc4MbtrZswAAABXUsUAAABJQsAnILcqJsI1O9k5QeA5QeA5
        QeA5QeA5QeA5QeA5QeA5QeA5QeA5QeA5QeA5QeA5QeA5QeA5QeA5QeA5QeA5QeA5QeA5QeA5QeA5Qd81
        O9oqJ8QrI7hPScIAAABQSsMtJrkwM9M8Sew8SOs7R+o7R+o7R+o7R+o7R+o7R+o7R+o7R+o7R+o7R+o7
        R+o7R+o7R+o7R+o7R+o7R+o7R+o7R+o7R+o7R+o7R+o7R+o7SOs7SOsvMtMsIrdVUMRBOb4qKMg2Qek3
        Qeo3Qeo3Qeo3Qeo3Qeo3Qeo3Qeo3Qeo3Qeo3Qeo3Qeo3Qeo3Qeo3Qeo3Qeo3Qeo3Qeo3Qeo3Qeo3Qeo3
        Qeo3Qeo3Qeo3Qeo3Qeo3Qeo3QuwqJ8Y2Lro3MLwsLtUzPOozPOkzPOkzPOkzPOkzPOkzPOkzPOkzPOkz
        POkzPOkzPOkzPOkzPOkzPOkzPOkzPOkzPOkzPOkzPOkzPOkzPOkzPOkzPOkzPOkzPOkzPOkzPOovM9ww
        J7c6M74rLdkwN+owNukwNukwNukwNukwNukwNuksM+krMukrMukrMukrMukrMukrMukrMuksM+kuNOkw
        NukwNukwNukwNukwNukwNukwNukwNukwNukwNukwN+ouM+IyKbc6M78pKdgsMegsMegsMegsMegsMegs
        MeglKuddYu1tcu9sce9sce9sce9sce9sce9qb+5cYu1ESeojKOciJucqL+gsMegsMegsMegsMegsMegs
        MegsMegsMegrLuEzKbc6M78mJtgoLOgoLOgoLOgoLOgoLOghJed+g/H////9///9///9///9///9///9
        ///9///9///+///0+f6wtvZKTesoLOgoLOgoLOgoLOgoLOgoLOgoLOgoLOgnKuIzKbc5Mr8jIdklJukl
        JuklJuklJuklJukcHueXm/P9///6///6///6///////////////////+///7///7//////////+rr/U1
        N+olJuglJuklJuklJuklJuklJukkJeEzKbc5Mr8iINgjI+gjI+cjI+cjI+cjI+cbG+aVl/P9///6///6
        ///2+/+zt/arrvasr/assPXBxfj8///////6///6///+///BxfcdHeYjI+cjI+cjI+cjI+cjI+gjIuEz
        Krc5Mr8kIdgkJegkJegkJegkJegkJegcHeeVmPP9///6///6///w9f45O+ohIugjJOgjJOgiI+gtL+jG
        y/j8///6///6//////9qbe4fH+ckJegkJegkJegkJekkJOAzKbc5Mr8lI9knKeknKegnKegnKegnKegf
        IeiWmvT9///6///6///w9f49P+omKOgnKegnKegnKegmKOhPUuzs8f36///6///+///AxPcbHecnKegn
        KegnKegnKekmJ+EzKbc5M78mJdopLOkpLOkpLOkpLOkpLOkhJOiXm/T9///6///6///w9f4+QusnK+kp
        LOkpLOkpLOkoLOlER+vh5fz6///6///8///X3PobHugpLOkpLOkpLOkpLeopKuIzKbc5M78oKNgsL+ks
        L+ksL+ksL+ksL+kkJ+iYnfP9///6///6///w9f5BResrLuksL+ksL+ksL+ksL+lmaO7z+P76///6////
        //+4vfchJOcsL+ksL+ksL+ksL+oqLOIzKbc6M78qKtguM+guM+guM+guM+guM+gnK+ean/P9///6///6
        ///x9v5SVuw+Qeo/QupBRepMT+tscO/g5fv8///6///7///+//9aXuwrL+guM+guM+guM+guM+gtMOEy
        Kbc6M78sLNkxNukxNukxNukxNukxNukpLuiboPT9///6///6///4/f/Y3fvU2fvU2fvW2/ri5/z8///8
        ///6///9///8//+Lj/EuM+gxNukxNukxNukxNukxNukvMuEyKLc6M78tLtkzOOkzOOkzOOkzOOkzOOkr
        MOido/T9///6///6///6///6///6///6///6///6///6///6///8///Z3vt1evA4PeoyN+kzOOkzOOkz
        OOkzOOkzOOoxNeIyKLc6M78wMdk2O+o3POk8QepBSOpPVexXXe20uff8///6///6///5/v/m6/zj6fzj
        6fzo7f34/f/7///8///i5/uPlPJkau9kau9dY+1PVexCSOo8Qeo3POk2O+o0N+MyKLc6M782N9pKUexW
        XO1eZO5kau9la+9eZO60uff8///6///6///0+f6Bh/FyePBzefB4f/GRl/Pv9P37///7///9//+1u/dl
        a+9kau9la+9kau9eZO5WXO1KUew6PuMxKLc8Nb9QUt1lbO5lbO5lbO5lbO5lbO5fZu21u/f8///6///6
        ///z+P51fO9ka+5lbO5lbO5jau6MkvL////6///6///x9v5/hfFlbO5lbO5lbO5lbO5lbO5lbO9cYeYv
        Jbc8Nb9SVd5pcPBocO9ocO9ocO9ocO9jau+1vPf8///6///6///z+P54f/Bob+9ocO9ocO9ocO9tc+//
        ///6///6//////+SmPNob+9ocO9ocO9ocO9ocO9pcPBeZOcvJbc8Nb9TV95qc/Bpcu9pcu9pcu9pcu9k
        be+3vff8///6///6///z+P54gPFoce9pcu9oce9gae+ZoPP////6///6//////+TmvNpcu9pcu9pcu9p
        cu9pcu9qc/BgZucvJbc8Nb9WWN1tde9tdO9tdO9tdO9tdO9nb+63vvf8///6///6///0+f6AiPBxeO9y
        ee9/hvGzuvb3/P/6///6///6///y9/6FjfJtdO9tdO9tdO9tdO9tdO9udfBjaeguJLY8Nb9XWt1ud/Bu
        du9udu9udu9udu9oce+5v/f8///6///6///6///////////////////////6///6///7///7///Dyvhw
        eO9udu9udu9udu9udu9udu9ud/BjauguJLc8Nb9YXN1xevBxee9xee9xee9xee9rdO+6wff////8///8
        ///8///8///8///8///8///9///////////w9f20u/Z2f+9weO9xee9xee9xee9xee9xee9xevBmbOcu
        JLc8Nr9aXd50ffBzfPBzfPBzfPBzfPBxevCBi/HY3/rj6Pzi5/zi5/zi5/zi5/zh5/ze4/vS2fq+xfiZ
        ofN7g/F0fPBzfPBzfPBzfPBzfPBzfPBzfPBzfPB0ffFobucuJLc8Nb5aXt50fvBzfu9zfu9zfu9zfu9z
        fu9zfe9td+5sd+5sd+5sd+5sd+5sd+5sd+5td+9ueO5vee9xfO9zfu9zfu9zfu9zfu9zfu9zfu9zfu9z
        fu9zfu90f/BpcOguJLc7M75XWdp3gvF2gfB2gfB2gfB2gfB2gfB2gfB2gfB2gfB2gfB2gfB2gfB2gfB2
        gfB2gfB2gfB2gfB2gfB2gfB2gfB2gfB2gfB2gfB2gfB2gfB2gfB2gfB4g/FhZuEtJLc/N75CQMp4ge56
        g+96g+96g+96g+96g+96g+96g+96g+96g+96g+96g+96g+96g+96g+96g+96g+96g+96g+96g+96g+96
        g+96g+96g+96g+96g+96g+9/ivM8OMYzK7lcV8YsI7hfZN56hO98h/J8hvJ8hvJ8hvJ8hvJ8hvJ8hvJ8
        hvJ8hvJ8hvJ8hvJ8hvJ8hvJ8hvJ8hvJ8hvJ8hvJ8hvJ8hvJ8hvJ8hvJ8hvJ8hvJ8h/J7hfFXWtkmHbZZ
        Vca7uuE/OL0rI7hDQctaXtthZt9iZt9iZt9iZt9iZt9iZt9iZt9iZt9iZt9iZt9iZt9iZt9iZt9iZt9i
        Zt9iZt9iZt9iZt9iZt9iZt9iZt9iZt9bX9pDQMovJ7lBOr0AAAAAAACxs9ViXclBOb48Nb46Mr46Mr86
        Mr46Mr46Mr46Mr46Mr46Mr46Mr46Mr46Mr46Mr46Mr46Mr46Mr46Mr46Mr46Mr46Mr46Mr46Mr46M748
        Nb5BOr5TTsMAAAAAAADgAAAHwAAAA4AAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAIAAAAHAAAAD4AAABw==
</value>
  </data>
</root>